openapi: 3.0.0
info:
  title: TF2 API
  description: TF2 QAI-Testbed API.
  version: 1.0.0
servers:
  - url: 'https://127.0.0.1/qai-testbed/api/0.0.1'
    description: Back end server
paths:
  # /login:
  #   post:
  #     tags:
  #       - Login
  #     summary: ログイン情報入力
  #     description: ログイン情報を入力し、ユーザ情報を取得。
  #     parameters: []
  #     requestBody:
  #       description: ログインユーザのアカウントとパスワードを設定
  #       content:
  #         application/json:
  #           schema:
  #             required:
  #               - Id
  #               - Name
  #             properties:
  #               UserName:
  #                 type: string
  #               Password:
  #                 type: string
  #           example:
  #             UserName: akita
  #             Password: ハッシュ化済みパスワード
  #     responses:
  #       '200':
  #         description: ログインユーザ情報の取得に成功
  #         content:
  #           application/json:
  #             schema:
  #               type: string
  #               format: json
  #               example:
  #                 Result:
  #                   Code: 0
  #                   Message: Success
  #                 Organizer:
  #                   Id: Xcorp-Dev
  #                   Name: X社　開発部
  #       '400':
  #         description: アカウントが存在しない。もしくパスワードが間違っている
  #         content:
  #           application/json:
  #             schema:
  #               type: string
  #               format: json
  #               example:
  #                 Result:
  #                   Code: 1
  #                   Message: User does not exist. Or the password is wrong.
  #                 Organizer: null
  #       '500':
  #         description: 予期せぬエラー
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ErrorResult'
  '/{OrganizerId}/mlComponents':
    get:
      tags:
        - mlComponents
      summary: 機械学習コンポーネント一覧表示.
      description: ログインユーザの組織に紐付く機械学習コンポーネント一覧情報を取得し、機械学習コンポーネント一覧画面に遷移し表示
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID(ログイン情報入力でのレスポンスから取得)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 機械学習コンポーネント一覧情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - mlComponents
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: string
                      Massage:
                        type: string
                  mlComponents:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Name:
                        type: string
                      Description:
                        type: string
                      ProblemDomain:
                        type: string
                      MLFrameworkName:
                        type: string
                example:
                  Result:
                    Code: 'P12000'
                    Message: Success.
                  mlComponents:
                    - Id: 1
                      Name: A社住宅価格予測-機械学習コンポーネント
                      Description: A社の住宅価格を予測する機械学習コンポーネント
                      ProblemDomain: 重回帰分析
                      MLFrameworkName: Tensorflow-2.3
                    - Id: 2
                      Name: B社文字認識-機械学習コンポーネント
                      Description: B社の文字を認識する機械学習コンポーネント
                      ProblemDomain: 画像分類
                      MLFrameworkName: Tensorflow-2.3
                    - Id: 3
                      Name: C社ゴルフスコア読取-機械学習コンポーネント
                      Description: C社のスコア表枠組み、文字を認識する機械学習コンポーネント
                      ProblemDomain: レイアウト認識、画像分類
                      MLFrameworkName: Tensorflow-2.3
        '404':
          description: アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'P14000'
                  Message: not found page.
        '422':
          description: 不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'P10000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - mlComponents
      summary: 機械学習コンポーネント追加.
      description: 機械学習コンポーネントを追加する
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
      requestBody:
        description: 機械学習コンポーネント追加情報
        content:
          application/json:
            schema:
              required:
                - Name
                - Description
                - ProblemDomain
                - MLFrameworkId
              properties:
                Name:
                  type: string
                Description:
                  type: string
                ProblemDomain:
                  type: string
                  description: |
                    機械学習コンポーネントの対象とする問題領域を記載する。  
                MLFrameworkId:
                  type: string  
                  description: |
                    機械学習フレームワークのIDを記載する  
                    名称とIDはGET /mlFrameworksで取得する。
            example:
              Name: Fashion Classifier
              Description: Fashion image classification
              ProblemDomain: ImageClassification
              MLFrameworkId: 1
      responses:
        '200':
          description: 追加完了
          content:
            application/json:
              schema:
                required:
                  - Result
                  - MLComponentId
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: string
                      Massage:
                        type: string
                  MLComponentId:
                    type: integer
                example:
                  Result:
                    Code: 'P22000'
                    Message: Success.
                  MLComponentId: 4
        '400':
          description: |
            以下の無効なリクエストを受信したときに返却する。
              - ValidationError
              - TypeError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'P28000'
                  Message: invalid request.
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'P24000'
                  Message: not found page.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}':
    delete:
      tags:
        - mlComponents
      summary: 機械学習コンポーネント削除.
      description: |
        機械学習コンポーネント一覧表示から、選択した機械学習コンポーネントを削除する。
        削除する機械学習コンポーネントに関連するインベントリ情報とテストディスクリプション情報を削除する。
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: string
      responses:
        '200':
          description:  削除成功通知
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'P32000'
                  Message: success.
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'P34000'
                  Message: not found ml_component.
        '422':
          description: |
            不正リクエスト
            - BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'P39000'
                  Message: database error.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'P39999'
                  Message: internal server error
  '/mlFrameworks':
    get:
      tags:
        - MLFrameworks
      summary: 機械学習フレームワーク一覧取得.
      description: 機械学習フレームワークの一覧を取得する
      responses:
        '200':
          description: 機械学習フレームワーク一覧
          content:
            application/json:
              schema:
                required:
                  - Result
                  - MLFrameworks
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  MLFrameworks:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Name:
                        type: string
                example:
                  Result:
                    Code: 'M11000'
                    Message: Success.
                  MLFrameworks:
                    - Id: 1
                      Name: Tensorflow-2.3
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}/Inventories':
    get:
      tags:
        - Inventories
      summary: インベントリ一覧取得.
      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付くインベントリの一覧を取得
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: インベントリ情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Inventories
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Message:
                        type: string
                  Inventories:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Name:
                        type: string
                      DataType:
                        type: object
                        properties:
                          Id:
                            type: integer
                          Name:
                            type: string
                      FileSystem:
                        type: object
                        properties:
                          Id:
                            type: integer
                          Name:
                            type: string
                      Description:
                        type: string
                      Schema:
                        type: string
                      Formats:
                        type: object
                        description: |
                          フォーマット
                        properties:
                          Id:
                            type: integer
                          Name:
                            type: string
                      FilePath:
                        type: string
                      CreationDatetime:
                        type: string
                      UpdateDatetime:
                        type: string
                example:
                  Result:
                    Code: 'I12000'
                    Message: Success.
                  Inventories:
                  - Id: 1
                    Name: TestDataset_0818
                    DataType:
                      Id: 1
                      Name: dataset
                    FileSystem: 
                      Id: 1
                      Name: UNIX_FILE_SYSTEM
                    Description: "1枚の手書き文字データ(28x28, png)のpng"
                    Schema: "Schema"
                    Formats:
                    - Id: 1
                      Name: CSV 
                    - Id: 2
                      Name: PNG 
                    FilePath: /mnt/xxx/1
                    CreationDatetime: '2020-09-28T01:22:03.920542'
                    UpdateDatetime: '2020-09-28T01:22:03.920542'
                  - Id: 2
                    Name: TestDataset_0918
                    DataType:
                      Id: 1
                      Name: dataset
                    FileSystem: 
                      Id: 1
                      Name: UNIX_FILE_SYSTEM
                    Description: 0918用のデータセット
                    Schema: "Schema"
                    Formats:
                    - Id: 1
                      Name: CSV 
                    FilePath: /mnt/xxx/2
                    CreationDatetime: '2020-09-28T01:22:03.920542'
                    UpdateDatetime: '2020-09-28T01:22:03.920542'
                  - Id: 3
                    Name: TrainedModel_0907
                    DataType:
                      Id: 2
                      Name: model
                    FileSystem: 
                      Id: 1
                      Name: UNIX_FILE_SYSTEM
                    Description: 0907用のモデル
                    Schema: "Schema"
                    Formats:
                    - Id: 3
                      Name: H5 
                    FilePath: /mnt/xxx/3
                    CreationDatetime: '2020-09-28T01:22:03.920542'
                    UpdateDatetime: '2020-09-28T01:22:03.920542'
                  - Id: 4
                    Name: TestDataset_1018
                    DataType:
                      Id: 1
                      Name: dataset
                    FileSystem: 
                      Id: 1
                      Name: UNIX_FILE_SYSTEM
                    Description: 1018用のデータセット
                    Schema: "Schema"
                    Formats:
                    - Id: 1
                      Name: CSV 
                    FilePath: /mnt/xxx/4
                    CreationDatetime: '2020-09-28T01:22:03.920542'
                    UpdateDatetime: '2020-09-28T01:22:03.920542'
                  - Id: 5
                    Name: TrainedModel_1007
                    DataType:
                      Id: 2
                      Name: model
                    FileSystem: 
                      Id: 1
                      Name: UNIX_FILE_SYSTEM
                    Destination: 1007用のモデル
                    Schema: "Schema"
                    Formats:
                    - Id: 3
                      Name: H5 
                    FilePath: /mnt/xxx/5
                    CreationDatetime: '2020-09-28T01:22:03.920542'
                    UpdateDatetime: '2020-09-28T01:22:03.920542'
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I14000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I10000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - Inventories
      summary: インベントリ追加.
      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付くインベントリを追加する
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
      requestBody:
        description: インベントリ追加情報
        content:
          application/json:
            schema:
              required:
                - Name
                - TypeId
                - FileSystemId
                - FilePath
                - Formats
              properties:
                Name:
                  type: string
                TypeId:
                  type: integer
                  description: dataTypeのIdを指定する。
                FileSystemId:
                  type: integer
                  description: ファイルシステムのIdを指定する。
                FilePath:
                  type: string  
                  description: |
                    インベントリのアドレスを指定する。  
                    TypeがWINDOWS_FILEの場合、以下の条件に当てはまるFilePathのみを許容する。  
                    ・アルファベッドから始まる  
                    ・長さが259バイト以下である  
                    TypeがUNIX_FILE_SYSTEMの場合、以下の条件に当てはまるFilePathのみを許容する。  
                    ・/から始まる  
                    ・長さが1023バイト以下である  
                    ・一つの要素(ディレクトリ名・ファイル名)が255バイト以下である  
                    この条件に当てはまらないFilePathが指定された場合、422を返却する。
                Destination: 
                  type: string
                Formats:
                  type: array
                  description: |
                    インベントリのフォーマットをN個設定する
                    フォーマット一覧取得APIで取得された名前以外を指定した場合、本API内部でフォーマット追加処理をする  
                  items:
                    type: string
                Schema:
                  type: string 
            example:
              Name: TestDataset_0818
              TypeId: 1
              FileSystemId: 1
              FilePath: /mnt/xxx/1
              Destination: 0818用のデータセット
              Formats: ["csv"]
              Schema: "Schema"
      responses:
        '200':
          description: 登録完了通知
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I22000'
                  Message: Success.
        '400':
          description: |
            以下の無効なリクエストを受信したときに返却する。
              - ValidationError
              - TypeError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I28000'
                  Message: invalid request.
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I24000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I20000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}/Inventories/{InventoryId}':
    put:
      tags:
        - Inventories
      summary: インベントリ編集.
      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付く対象のインベントリIDを指定し、そのインベントリ情報を編集する。
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
        - name: inventoryId
          in: path
          description: インベントリId
          required: true
          schema:
            type: integer
      requestBody:
        description: インベントリ追加情報
        content:
          application/json:
            schema:
              required:
                - Name
                - TypeId
                - FileSystemId
                - FilePath
                - Formats
              properties:
                Name:
                  type: string
                TypeId:
                  type: integer
                  description: dataTypeのIdを指定する。
                FileSystemId:
                  type: integer
                  description: ファイルシステムのIdを指定する。
                FilePath:
                  type: string 
                  description: |
                    インベントリのアドレスを指定する。  
                    TypeがWINDOWS_FILEの場合、以下の条件に当てはまるFilePathのみを許容する。  
                    ・アルファベッドから始まる  
                    ・長さが259バイト以下である  
                    TypeがUNIX_FILE_SYSTEMの場合、以下の条件に当てはまるFilePathのみを許容する。  
                    ・/から始まる  
                    ・長さが1023バイト以下である  
                    ・一つの要素(ディレクトリ名・ファイル名)が255バイト以下である  
                    この条件に当てはまらないFilePathが指定された場合、422を返却する。
                Destination: 
                  type: string 
                Formats:
                  type: array
                  description: |
                    インベントリのフォーマットをN個設定する
                    フォーマット一覧取得APIで取得された名前以外を指定した場合、本API内部でフォーマット追加処理をする  
                  items:
                    type: string
                Schema:
                  type: string 
            example:
              Name: TestDataset_0818
              TypeId: 1
              FileSystemId: 1
              FilePath: /mnt/xxx/1
              Destination: 0818用のデータセット
              Formats: ["csv"]
              Schema: "Schema"
      responses:
        '200':
          description: インベントリ編集情報
          content:
            application/json:
              schema:
                required:
                  - Result
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                example:
                  Result:
                    Code: 'I32000'
                    Message: Success.
        '400':
          description: |
            以下の無効なリクエストを受信したときに返却する。
              - ValidationError
              - TypeError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I38000'
                  Message: invalid request.
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I34000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I30000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    delete:
      tags:
        - Inventories
      summary: インベントリ削除.
      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付く対象のインベントリIDを指定し、そのインベントリ情報を削除する
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
        - name: inventoryId
          in: path
          description: インベントリId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description:  削除成功通知
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I42000'
                  Message: success.
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I44000'
                  Message: not found page.
        '422':
          description: |
            不正リクエスト
            - SQLAlChemyError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I49000'
                  Message: database error.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/QualityDimensions':
    get:
      tags:
        - Quality Dimension
      summary: 品質特性一覧取得.
      description: 品質特性の一覧を取得する
      responses:
        '200':
          description: テストディスクリプション情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - QualityDimensions
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  QualityDimensions:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Name:
                        type: string
                example:
                  Result:
                    Code: 'Q12000'
                    Message: Success.
                  QualityDimensions:
                    - Id: 1
                      Name: 要求分析の十分性 
                    - Id: 2
                      Name: データ設計の十分性
                    - Id: 3
                      Name: データセットの被覆性
                    - Id: 4
                      Name: データセットの均一性
                    - Id: 5
                      Name: 機械学習モデルの正確性
                    - Id: 6
                      Name: 機械学習モデルの安定性
                    - Id: 7
                      Name: 運用時品質の維持性
                    - Id: 8
                      Name: プログラムの健全性
                    - Id: 9999
                      Name: 未分類
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'Q14000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'Q10000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/formats':
    get:
      tags:
        - Format
      summary: フォーマット一覧取得.
      description: フォーマットの一覧を取得する
      responses:
        '200':
          description: フォーマット情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Formats
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  Formats:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Type:
                        type: string
                        description: |
                          以下いずれかの対応するタイプを返却する。
                          * text
                          * picture
                          * table
                          * binary
                      Name:
                        type: string
                example:
                  Result:
                    Code: I72000
                    Message: Success.
                  Tags:
                    - Id: 1
                      Type: picture
                      Name: png
                    - Id: 2
                      Type: picture
                      Name: jpg
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I74000'
                  Message: not found page.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/dataTypes':
    get:
      tags:
        - Data Type
      summary: データタイプ一覧取得.
      description: データタイプの一覧を取得する
      responses:
        '200':
          description: データタイプ情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - DataTypes
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  DataTypes:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Name:
                        type: string
                        description: |
                          以下のテータタイプを返却する。
                          * dataset
                          * model
                          * attribute set
                example:
                  Result:
                    Code: I82000
                    Message: Success.
                  DataTypes:
                    - Id: 1
                      Name: dataset
                    - Id: 2
                      Name: model
                    - Id: 3
                      Name: attribute set
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/fileSystems':
    get:
      tags:
        - FileSystem
      summary: ファイルシステム一覧取得.
      description: ファイルシステムの一覧を取得する
      responses:
        '200':
          description: ファイルシステム情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - FileSystems
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  FileSystems:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Name:
                        type: string
                        description: |
                          以下のテータタイプを返却する。
                          * UNIX_FILE_SYSTEM
                          * WINDOWS_FILE
                example:
                  Result:
                    Code: I92000
                    Message: Success.
                  FileSystems:
                    - Id: 1
                      Name: UNIX_FILE_SYSTEM
                    - Id: 2
                      Name: WINDOWS_FILE
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/tags':
    get:
      tags:
        - Tag
      summary: (使用機能なし)タグ一覧取得.
      description: タグの一覧を取得する
      responses:
        '200':
          description: タグ情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Tags
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  Tags:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Type:
                        type: string
                        description: |
                          * INVENTORY : インベントリに使用可能なタグ
                      Name:
                        type: string
                example:
                  Result:
                    Code: I62000
                    Message: Success.
                  Tags:
                    - Id: 1
                      Type: INVENTORY
                      Name: CSV 
                    - Id: 2
                      Type: INVENTORY
                      Name: TF_MODEL
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I64000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I60000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/QualityMeasurements':
    get:
      tags:
        - Quality_Measurement
      summary: 測定基準一覧取得.
      description: 測定基準の一覧を取得する
      responses:
        '200':
          description: |
            測定基準情報を取得する.
            * レスポンスの `QualityMeasurements.properties.Min` と 
              `QualityMeasurements.properties.Max` は未定義の場合nullが返される.
          content:
            application/json:
              schema:
                required:
                  - Result
                  - QualityMeasurements
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  QualityMeasurements:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Name:
                        type: string
                      Description:
                        type: string
                      QualityDimensionId:
                        type: integer
                      Type:
                        type: string
                      Min:
                        type: number
                      Max:
                        type: number
                      Structure:
                        type: string
                example:
                  Result:
                    Code: 'Q22000'
                    Message: Success.
                  QualityMeasurements:
                    - Id: 1
                      Name: 学習モデルの精度計測 
                      Description: 学習モデルの正確性評価指標 
                      QualityDimensionId: 5
                      Type: "float"
                      Min: 0.0
                      Max: null
                      Structure: "single"
                    - Id: 2
                      Name: 学習モデルの敵対的サンプル安定性計測
                      Description: 学習モデルの安定性評価指標 
                      QualityDimensionId: 6
                      Type: "float"
                      Min: null
                      Max: 1.0
                      Structure: "single"
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'Q24000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'Q20000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - Quality_Measurement
      summary: (使用禁止→AIT追加APIで実施)測定基準追加.
      description: |
        * 測定基準を追加する。  
        * 測定基準はプリミティブな一つのメトリクス（指標値）をもつ。  
        * この測定基準設計者が、どういった基準で算出するかをDescription項目で明確化しなければならない。  
        * 名称とバージョンの組み合わせが既に存在する場合、400を返却する。  
        * 存在しない内部品質特性IDを指定した場合、400を返却する。  
      requestBody:
        description: 測定基準追加情報
        content:
          application/json:
            schema:
              required:
                - Name
                - Version
                - Description
                - QualityDimensionId
                - OperandTemplates
              properties:
                Name:
                  type: string
                Version:
                  type: string
                Description:
                  type: string
                QualityDimensionId:
                  type: integer
                OperandTemplates:
                  type: object
                  properties:
                    Name:
                      type: string
                    Unit:
                      type: string
            example:
              - Name: 分類問題における学習モデルACC計測 
                Version: 0.1
                Description: | 
                  * 評価物：学習済モデル  
                  * 対象領域：分類問題  
                  * メトリクス：  
                    * ACC = (TP+TF) / (TP+FP+TN+FN)  
                QualityDimensionId: 5
                OperandTemplates: 
                  - Name: ACC
                    Unit: "%"
      responses:
        '200':
          description: 追加正常終了
          content:
            application/json:
              schema:
                required:
                  - Result
                  - QualityMeasurementId
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  QualityMeasurementId:
                    type: integer
              example:
                Result:
                  Code: 'Q23000'
                  Message: Success.
                QualityMeasurementId: 100
        '400':
          description: |
            以下の無効なリクエストを受信したときに返却する。
              - ValidationError
              - TypeError
              - BadRequest
              - Name-Versionの組み合わせが既に存在する
              - 存在しない内部品質特性IDを指定した
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'Q23010'
                  Message: invalid request.
        '500':
          description: |
            サーバでの処理失敗
            - SQLAlChemyError
            - その他例外
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/QualityMeasurements/RelationalOperators':
    get:
      tags:
        - Quality_Measurement
      summary: 関係演算子取得.
      description: 関係演算子の一覧を取得する
      responses:
        '200':
          description: 関係演算子情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - RelationalOperators
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  RelationalOperators:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Expression:
                        type: string
                      Description:
                        type: string
                example:
                  Result:
                    Code: 'Q32000'
                    Message: Success.
                  RelationalOperators:
                    - Id: 1
                      Expression: '==' 
                      Description: 値が等しければTrue
                    - Id: 2
                      Expression: '!=' 
                      Description: 値が等しくなければtrue
                    - Id: 3
                      Expression: '>' 
                      Description: 値が大きければtrue
                    - Id: 4
                      Expression: '<' 
                      Description: 値が小さければtrue
                    - Id: 5
                      Expression: '>=' 
                      Description: 値が同じか大きければtrue
                    - Id: 6
                      Expression: '<=' 
                      Description: 値が同じが小さければtrue
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'Q34000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'Q30000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/testRunners':
    get:
      tags:
        - TestRunner
      summary: テストランナー(AIT)一覧取得.
      description: |
        テストランナー(AIT)の一覧を取得する.
        * レスポンスの `TestRunners.properties.Report.properties.Measures.properties.Min` と 
          `TestRunners.properties.Report.properties.Measures.properties.Max` 
          は未定義の場合nullが返される.
      responses:
        '200':
          description: テストランナー(AIT)情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - TestRunners
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  TestRunners:
                    type: object
                    properties:
                      Id:
                        type: integer
                      QualityDimensionId:
                        type: integer
                      Name:
                        type: string
                      Description:
                        type: string
                      Author:
                        type: string
                      Email:
                        type: string
                        description: データが存在しない場合、この項目は存在しない
                      Version:
                        type: string
                      Quality:
                        type: string
                      LandingPage:
                        type: string
                      Reference:
                        type: array
                        description: データ項目未決定
                        items:
                          type: string
                      ParamTemplates:
                        type: object
                        properties:
                          Id:
                            type: integer
                          Name:
                            type: string
                          Type:
                            type: string
                          Min:
                            type: number
                            description: データが存在しない場合、この項目は存在しない
                          Max:
                            type: number
                            description: データが存在しない場合、この項目は存在しない
                          Description:
                            type: string
                          DefaultVal:
                            type: string
                            description: データが存在しない場合、この項目は存在しない
                      TargetInventories:
                        type: object
                        properties:
                          Id:
                            type: integer
                          Name:
                            type: string
                          DataType:
                            type: object
                            properties:
                              Id:
                                type: integer
                              Name:
                                type: string
                          Description:
                            type: string
                          Formats:
                            type: object
                            properties:
                              Id:
                                type: integer
                              Name:
                                type: string
                          Schema:
                            type: string
                            description: データが存在しない場合、この項目は存在しない
                      Report:
                        type: object
                        properties:
                          Measures:
                            type: object
                            properties:
                              Id:
                                type: integer
                              Name:
                                type: string
                              Type:
                                type: string
                              Description:
                                type: string
                              Min:
                                type: number
                              Max:
                                type: number
                              Srtructure:
                                type: string
                          Resources:
                            type: object
                            properties:
                              Id:
                                type: integer
                              Name:
                                type: string
                              Type:
                                type: string
                              Description:
                                type: string
                      Downloads:
                        type: object
                        properties:
                          Id:
                            type: integer
                          Name:
                            type: string
                          Description:
                            type: string
                example:
                  Result:
                    Code: 'I52000'
                    Message: Success.
                  TestRunners:
                    - Id: 1
                      QualityDimensionId: 1
                      Name: acc_check.py
                      Description: "* データ入力形式: XXX\n* MLエンジン: tensorflow-vX.X\n* 出力: XXX\n"
                      Author: "John Smith"
                      Email: "John_Smith@aaa.com"
                      Version: "1"
                      Quality: "https://airc.aist.go.jp/aiqm/quality/internal/要求分析の十分性"
                      LandingPage: "https://aithub.com/AITName/AITVersion"
                      Reference: ["書き方は未検討", "書き方は未検討"]
                      ParamTemplates:
                        - Id: 1
                          Name: Threshold
                          Type: float
                          Min: 0.0
                          Max: 1.0
                          Description: "敵対的生成のずらし具合, \\epsilon \\in \\{0.0, 1.0\\}"
                          DefaultVal: "0.5"
                        - Id: 2
                          Name: Lower Limit
                          Type: float
                          Min: 0.0
                          Max: null
                          Description: "敵対的生成のずらし具合, \\epsilon \\in \\{0.0, 1.0\\}"
                          DefaultVal: "0.5"
                        - Id: 3
                          Name: Upper Limit
                          Type: float
                          Min: null
                          Max: 1.0
                          Description: "敵対的生成のずらし具合, \\epsilon \\in \\{0.0, 1.0\\}"
                          DefaultVal: "0.5"
                      TargetInventories:
                        - Id: 1
                          Name: Trained Model
                          DataType: 
                            Id: 2
                            Name: model
                          Description: Trained Model
                          Formats: 
                            - Id: 1
                              Name: h5
                        - Id: 2
                          Name: Test Data
                          DataType:
                            Id: 1
                            Name: dataset
                          Description: valiadtion data set
                          Formats: 
                            - Id: 2
                              Name: csv
                      Report:
                        Measures:
                          - Id: 1
                            Name: mae
                            Type: float
                            Description: mean absolute error. $\\sum_k {|f_k - y_k|} / n$
                            Min: 0.0
                            Max: null
                            Srtructure: single
                          - Id: 2
                            Name: F-Value
                            Type: float
                            Description: $\\sum_k (f_k - y_k)^2 / n$
                            Min: 0.0
                            Max: null
                            Srtructure: single
                        Resources:
                          - Id: 1
                            Name: distribution_graph
                            Type: image
                            Description: 分布
                    - Id: 2
                      QualityDimensionId: 1
                      Name: adversarial_example_acc_test.py
                      Description: "* データ入力形式: XXX\n* MLエンジン: tensorflow-vX.X\n* 出力: XXX\n"
                      Author: "John Smith"
                      Email: "John_Smith@aaa.com"
                      Version: "1"
                      Quality: "https://airc.aist.go.jp/aiqm/quality/internal/要求分析の十分性"
                      LandingPage: "https://aithub.com/AITName/AITVersion"
                      Reference: ["書き方は未検討", "書き方は未検討"]
                      ParamTemplates:
                        - Id: 4
                          Name: Threshold
                          Type: float
                          Description: "敵対的生成のずらし具合, \\epsilon \\in \\{0.0, 1.0\\}"
                          DefaultVal: "0.5"
                        - Id: 5
                          Name: Lower Limit
                          Type: float
                          Description: "敵対的生成のずらし具合, \\epsilon \\in \\{0.0, 1.0\\}"
                          DefaultVal: "0.5"
                        - Id: 6
                          Name: Upper Limit
                          Type: float
                          Description: "敵対的生成のずらし具合, \\epsilon \\in \\{0.0, 1.0\\}"
                          DefaultVal: "0.5"
                      TargetInventories:
                        - Id: 7
                          Name: Trained Model
                          DataType: 
                            Id: 2
                            Name: model
                          Description: Trained Model
                          Formats: 
                            - Id: 1
                              Name: h5
                        - Id: 8
                          Name: Test Data
                          DataType:
                            Id: 1
                            Name: dataset
                          Description: valiadtion data set
                          Formats: 
                            - Id: 2
                              Name: csv
                      Report:
                        Measures:
                          - Id: 3
                            Name: F-Value
                            Type: float
                            Description: $\\sum_k (f_k - y_k)^2 / n$
                            Min: 0.0
                            Max: null
                            Srtructure: single
                        Resources:
                          - Id: 2
                            Name: confusion_matrix
                            Type: image
                            Description: 混同行列
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - TestRunner
      summary: （使用禁止）テストランナー追加.
      description: |
        * テストランナーを追加する  
        * 名称とバージョンの組み合わせが既に存在する場合、400を返却する  
        * 存在しない内部品質特性IDを指定した場合、400を返却する  
        * 存在しないタグを指定した場合、400を返却する  
        * α版としては以下を前提（制約条件）とする  
          * テストメソッド自体は以下に配置したうえで、本APIを呼び出すこと  
            {インストールパス}\qai-testbed\src\dag\{名称}
      requestBody:
        description: テストランナー追加情報
        content:
          application/json:
            schema:
              required:
                - Name
                - Version
                - Description
                # - QualityMeasurementId
                - Author
                - Quality
                - Reference
                - ParamTemplates 
                - TargetInventories 
                - Report
                - Downloads
              properties:
                Name:
                  type: string
                Version:
                  type: string
                Author:
                  type: string
                Email:
                  type: string
                Quality:
                  type: string
                Reference:
                  type: array
                Description:
                  type: string
                # QualityMeasurementId:
                #   type: integer
                ParamTemplates:
                  type: object
                  properties:
                    Name:
                      type: string
                    ValueType:
                      type: string
                    Description:
                      type: string
                    DefaultVal:
                      type: string
                TargetInventories:
                  type: object
                  properties:
                    Name:
                      type: string
                    Tags:
                      type: array
                      items:
                        type: integer
                    Description:
                      type: string
                    Format:
                      type: array
                      items:
                        type: string
                    # Schema:
                Report:
                  type: object
                  properties:
                    Measures:
                      type: object
                      properties:
                        Name:
                          type: string
                        Description:
                          type: string
                        Type:
                          type: string
                        Min:
                          type: number
                        Max:
                          type: number
                        Structure:
                          type: string
                    Resources:
                      type: object
                      properties:
                        Name:
                          type: string
                        Path:
                          type: string
                        Type:
                          type: string
                        Description:
                          type: string
                Downloads:
                  type: object
                  properties:
                    Name:
                      type: string
                    Path:
                      type: string
                    Description:
                      type: string
              example:
                Name: eval_mnist_acc_test_by_tfmodel_1.0
                Version: 1.0
                Author: "John Smith"
                Email: "John_Smith@aaa.com"
                Quality: "https://airc.aist.go.jp/aiqm/quality/internal/要求分析の十分性"
                Reference: ["書き方は未検討", "書き方は未検討"]
                Description: |
                  * データ入力形式: XXX
                  * MLエンジン: tensorflow-vX.X
                  * 出力: XXX
                QualityMeasurementId: 100
                ParamTemplates:
                  - Name: Threshold
                    ValueType: float
                    Description: "敵対的生成のずらし具合, \\epsilon \\in \\{0.0, 1.0\\}"
                    DefaultVal: "0.5"
                  - Name: Lower Limit
                    ValueType: float
                    Description: "敵対的生成のずらし具合, \\epsilon \\in \\{0.0, 1.0\\}"
                    DefaultVal: "0.5"
                  - Name: Upper Limit
                    ValueType: float
                    Description: "敵対的生成のずらし具合, \\epsilon \\in \\{0.0, 1.0\\}"
                    DefaultVal: "0.5"
                TargetInventories: 
                  - Name: TrainedModelFile
                    Tags: [1]
                    Description: "onnx"
                    Format: ["onnx"]
                  - Name: ValidationDataSet
                    Tags: [2]
                    Description: "1枚の手書き文字データ(28x28, png)のpng"
                    Format: ["png"]
                Report:
                  Measures:
                    - Name: "mae"
                      Description: "mean absolute error. $\\sum_k {|f_k - y_k|} / n$"
                      Type: "int"
                      Min: 0.0
                      Max: null
                      Structure: "single"
                  Resources:
                    - Name: "distribution_graph"
                      Path: "aa/bb/cc/distribution_graph.png"
                      Type: "image"
                      Description:  "分布"
                Downloads:
                    - Name: "log.txt"
                      Path: "/aa/bb/cc/log.png"
                      Description: "one image"
      responses:
        '200':
          description: 追加正常終了
          content:
            application/json:
              schema:
                required:
                  - Result
                  - TestRunnerId
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  TestRunnerId:
                    type: integer
                example:
                  Result:
                    Code: 'R15000'
                    Message: Success.
                  TestRunnerId: 100
        '400':
          description: |
            以下の無効なリクエストを受信したときに返却する。
              - ValidationError
              - TypeError
              - BadRequest
              - Name-Versionの組み合わせが既に存在する
              - 存在しない内部品質特性IDを指定した場合、400を返却する
              - 存在しないタグIDを指定した場合、400を返却する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'R15010'
                  Message: invalid request.
        '500':
          description: |
            サーバでの処理失敗
            - SQLAlChemyError
            - その他例外
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/testRunners/manifest':
    post:
      tags:
        - TestRunner
      summary: ait_manifest.jsonに基づくテストランナー追加.
      description: |
        * ait_manifest.jsonを受け取り、テストランナーを追加する  
        * 名称とバージョンの組み合わせが既に存在する場合、400を返却する  
        * 存在しないタグを指定した場合、400を返却する  
      requestBody:
        description: 「ait_manifest.json」を参照.
        content: {}
      responses:
        '200':
          description: 追加正常終了
          content:
            application/json:
              schema:
                required:
                  - Result
                  - TestRunnerId
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  TestRunnerId:
                    type: integer
                example:
                  Result:
                    Code: 'A12000'
                    Message: Success.
                  TestRunnerId: 100
        '400':
          description: |
            以下の無効なリクエストを受信したときに返却する。
              - ValidationError
              - TypeError
              - BadRequest
              - Name-Versionの組み合わせが既に存在する
              - 存在しないタグIDを指定した場合、400を返却する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'A14XXX' #XXXはインクリメントしていく
                  Message: invalid request.
        '500':
          description: |
            サーバでの処理失敗
            - SQLAlChemyError
            - その他例外
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriotions/runners':
    post:
      tags:
        - Test descriotions
      summary: テスト実行.
      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付くテスト機能を実行する。※非同期処理
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
      requestBody:
        description: 非同期処理コマンド
        content:
          application/json:
            schema:
              required:
                - Command
                - TestDescriptionIds
              properties:
                Command:
                  type: string
                TestDescriptionIds:
                  type: array
                  description: |
                    - コマンドの反映先となるtestDescriptionIDを指定する。  
                    - 複数のtestDescriptionIDを指定可能とする。  
                    - すべてのtestDescriptionに対して実施したい場合は、空を指定する。  
                  items:
                    type: integer
            example:
              Command: AsyncStart
              TestDescriptionIds: [1, 2]
      responses:
        '200':
          description: テスト実行要求受付日時
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Job
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  Job:
                    type: object
                    properties:
                      Id:
                        type: integer
                      StartDateTime:
                        type: string
                example:
                  Result:
                    Code: 'R12000'
                    Message: Success.
                  Job:
                    Id: 1
                    StartDateTime: '2019-10-25 15:00:00T+0900'
        '400':
          description: |
            以下の無効なリクエストを受信したときに返却する。
              - ValidationError
              - TypeError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'R18000'
                  Message: invalid request.
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'R14000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'R10000 or R19000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriotions/run-status':
    get:
      tags:
        - Test descriotions
      summary: テスト実行ジョブのステータスと結果取得.
      description: 実行指示した各job(test description)のステータス・結果を取得する
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: テスト実行ジョブのステータスと結果
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Job
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  Job:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Status:
                        type: string
                        description: |
                          以下のステータスを定義する  
                          この状態は各runのマージした内容となる  
                            * QUEUED : すべてのrunがQUEUED
                            * RUNNING : すべてのrunで、1件でもRUNNINGがある場合(優先レベル2)
                            * DONE : すべてのrunがDONE
                            * CANCELLING : すべてのrunで、1件でもCANCELLINGがある場合(優先レベル1→最優先)  
                              α版では実装範囲外
                            * CANCELLED : すべてのrunがCANCELLED  
                              α版では実装範囲外
                      Result:
                        type: string
                        description: |
                          以下の結果を定義する  
                          この状態は各runのマージした内容となる  
                            * OK : すべてのrunがOK
                            * NG : すべてのrunで、1件でもNGがある場合(優先レベル2)
                            * ERR : すべてのrunで、1件でもERRがある場合(優先レベル1→最優先)
                            * NA : すべてのrunで、1件でもNAがある場合(優先レベル3)
                      ResultDetail:
                        type: string
                        description: |
                          実行runのOK、NG、ERR、NAのそれぞれ件数内訳を返却する  
                          "OK:XX NG:XX ERR:XX NA:XX"
                      Runs:
                        type: object
                        properties:
                          Id:
                            type: integer
                          TestDescriptionID:
                            type: integer
                          Status:
                            type: string
                            description: |
                              以下のステータスを定義する  
                                * NA : 未実行
                                * QUEUED : 実行キューに登録済み
                                * RUNNING : 実行中
                                * DONE : 実行完了
                                * CANCELLING : キャンセル指示済み  
                                  α版では実装範囲外
                                * CANCELLED : キャンセル済み  
                                  α版では実装範囲外
                          Result:
                            type: string
                            description: |
                              以下の結果を定義する  
                                * OK : テスト指標達成
                                * NG : テスト指標未達成
                                * ERR : テスト実行でエラー発生
                                * NA : テスト未実施
                          ResultDetail:
                            type: string
                            description: |
                              以下の詳細結果を定義する  
                example:
                  Result:
                    Code: 'R22000'
                    Message: Success.
                  Job:
                    Id: 1
                    Status: 'RUNNING'
                    Result: 'NA'
                    ResultDetail: 'OK:1 NG:0 ERR:0 NA:1'
                  Runs:
                    - Id: 1
                      TestDescriptionID: 1
                      Status: 'DONE'
                      Result: 'OK'
                      ResultDetail: 'OK'
                    - Id: 2
                      TestDescriptionID: 2
                      Status: 'RUNNING'
                      Result: 'NA'
                      ResultDetail: 'NA'
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'R24000'
                  Message: not found page.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions':
    get:
      tags:
        - Test descriotions
      summary: テストディスクリプション一覧表示.
      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付くテストディスクリプション一覧を取得し、テストディスクリプション一覧を表示
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: テストディスクリプション情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Test
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  Test:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Status:
                        type: string
                      Result:
                        type: string
                      ResultDetail:
                        type: string
                      TestDescriptions:
                        type: array
                        items:
                          type: object
                          properties:
                            Id:
                              type: integer
                            ParentID:
                              type: integer
                              description: |
                                親TestDescriptionIDを返却する。  
                                親がいない場合、この項目は存在しない。  
                            Name:
                              type: string
                            Result:
                              type: string
                            ResultDetail:
                              type: string
                            CreationDatetime:
                              description: 該当のテストデスクリプションが作成されたシステム日時を返却します
                              type: string
                            UpdateDatetime:
                              type: string
                            TargetInventories:
                              type: array
                              description: |
                                このTestDescriptionが対象とするインベントリ情報リストを返却する。  
                              items:
                                type: object
                                properties:
                                  Id:
                                    type: integer
                                  Name:
                                    type: string
                                  TemplateInventoryId:
                                    type: integer
                                    description: |
                                      テンプレートになるターゲットインベントリIDを返却する。  
                            Opinion:
                              type: string
                              description: |
                                このTestDescriptionの見解を返却する。未設定の場合、空文字で返却する。  
                            Star:
                              type: boolean
                              description: |
                                このTestDescriptionがお気に入りに指定されているかどうかを真偽値で返却する。  
                            TestRunnerId:
                              type: integer
                              description: |
                                TestDescriptionの元になったテストランナー（AIT）のIDを返却する。
                example:
                  Result:
                    Code: 'T12000'
                    Message: Success.
                  Test:
                    Id: 1
                    Status: DONE
                    Result: NG
                    ResultDetail: OK 2 / NG 1 / NA 1
                    TestDescriptions:
                      - Id: 1
                        Name: NeuronCoverage
                        Result: OK
                        CreationDatetime: "2020-09-28T01:22:03.920542"
                        UpdateDatetime: "2020-09-28T01:22:03.920542"
                        TargetInventories: [
                          {
                            "Id": 1,
                            "Name": "TestDataset_1001",
                            "TemplateInventoryId": 1
                          }
                        ]
                        Opinion: "ニューロンカバレージが規定のXX%以上であり、品質に問題なしと判断した。"
                        Star: true
                        TestRunnerId: 11
                      - Id: 2
                        Name: MetamorphicTesting
                        Result: OK
                        ResultDetail: OK
                        CreationDatetime: "2020-09-28T01:22:03.920542"
                        UpdateDatetime: "2020-09-28T01:22:03.920542"
                        TargetInventories: [
                          {
                            "Id": 2,
                            "Name": "TestDataset_1005",
                            "TemplateInventoryId": 2
                          },
                          {
                            "Id": 3,
                            "Name": "TrainedModel_1005",
                            "TemplateInventoryId": 3
                          }
                        ]
                        Opinion: ""
                        Star: false
                        TestRunnerId: 12
                      - Id: 3
                        Name: AttributeCoverage
                        Result: NG
                        ResultDetail: AttributeCoverage is not enough
                        CreationDatetime: "2020-09-28T01:22:03.920542"
                        UpdateDatetime: "2020-09-28T01:22:03.920542"
                        TargetInventories: [
                          {
                            "Id": 2,
                            "Name": "TestDataset_1005",
                            "TemplateInventoryId": 4
                          }
                        ]
                        Opinion: ""
                        Star: false
                        TestRunnerId: 13
                      - Id: 4
                        ParentID: 3
                        Name: AttributeCoverage
                        Result: NA
                        ResultDetail: NA
                        CreationDatetime: "2020-09-28T01:22:03.920542"
                        UpdateDatetime: "2020-09-28T01:22:03.920542"
                        TargetInventories: [
                          {
                            "Id": 4,
                            "Name": "TestDataset_1018",
                            "TemplateInventoryId": 5
                          },
                          {
                            "Id": 5,
                            "Name": "TrainedModel_1007",
                            "TemplateInventoryId": 6
                          }
                        ]
                        Opinion: ""
                        Star: false
                        TestRunnerId: 14
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T14000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T10000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - Test descriotions
      summary: テストディスクリプション追加
      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付くテストディスクリプション詳細情報を追加する
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
      requestBody:
        description: テストディスクリプション詳細追加情報
        content:
          application/json:
            schema:
              required:
                - Name
                - QualityDimensionID
                - QualityMeasurements
                - TargetInventories
                - TestRunner
              properties:
                Name:
                  type: string
                QualityDimensionID:
                  type: integer
                  description: |
                    内部品質プロパティIDを指定する。  
                    存在しない内部品質プロパティIDを指定した場合、422を返却する。  
                ParentID:
                  type: integer
                  description: |
                    親(コピー元)のTestDescriptionIDを指定する。  
                    コピーではなく、新規作成の場合は指定しない。  
                    存在しないTestDescriptionIDを指定した場合、422を返却する。  
                QualityMeasurements:
                  type: object
                  properties:
                    Id:
                      type: integer
                      description: |
                        メジャーメントのIDを指定する。
                    Value:
                      type: string
                    RelationalOperatorId:
                      type: integer
                    Enable:
                      type: boolean
                      description: |
                        trueの場合このMeasurementを使用する。  
                        falseの場合は使用しない。  
                        trueの場合はValue、RelationalOperatorIdが共に設定されていることが前提。  
                        上記が未設定の場合、400を返却する。
                TargetInventories:
                  type: array
                  items:
                    properties:
                      Id:
                        type: integer
                      InventoryId:
                        type: integer
                      TemplateInventoryId:
                        type: integer
                        description: |
                          テンプレートになるターゲットインベントリIDを指定する。  
                          値はGET testrunner で返却されたTargetInventoryのIDを指定する。  
                TestRunner:
                  type: object
                  properties:
                    Id:
                      type: integer
                      description: |
                        テストランナーのIDを指定する。
                    Params:
                      type: object
                      properties:
                        TestRunnerParamTemplateId:
                          type: integer
                          description: |
                            テストランナーのパラメータIDを指定する。
                        Value:
                          type: string
            example:
              Name: Neuron Coverage
              ParentID: 10
              QualityDimensionID: 1
              QualityMeasurements:
                Id: 1
                Value: "60"
                RelationalOperatorId: 1
                Enable: true
              TargetInventories:
                - Id: 1
                  InventoryId: 5
                  TemplateInventoryId: 1
                - Id: 2
                  InventoryId: 4
                  TemplateInventoryId: 2
              TestRunner:
                Id: 1
                Params:
                  - TestRunnerParamTemplateId: 1
                    Value: "0.5"
                  - TestRunnerParamTemplateId: 2
                    Value: "0.3"
                  - TestRunnerParamTemplateId: 3
                    Value: "1.0"
      responses:
        '200':
          description: 登録完了通知
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T22000'
                  Message: Success.
        '400':
          description: |
            以下の無効なリクエストを受信したときに返却する。
              - ValidationError
              - TypeError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T28000'
                  Message: invalid request.
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T24000'
                  Message: not found page.
        '422':
          description: |
            不正リクエスト
            - BadRequest
            - SQLAlChemyError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T20000 or I29000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions/{testTestDescriptionsId}':
    get:
      tags:
        - Test descriotions
      summary: テストディスクリプション詳細表示.
      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付く対象のテストディスクリプションIDを指定し、そのテストディスクリプションの詳細情報を取得
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
        - name: testTestDescriptionsId
          in: path
          description: テストディスクリプションId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: テストディスクリプションの詳細情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - TestDescriptionDetail
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  TestDescriptionDetail:
                    type: object
                    properties:
                      Id:
                        type: integer
                      Name:
                        type: string
                      ParentID:
                        type: integer
                        description: |
                          親TestDescriptionIDを返却する。  
                          親がいない場合、この項目は存在しない。  
                      QualityDimension:
                        type: object
                        properties:
                          Id:
                            type: integer
                          Name:
                            type: string
                      Opinion:
                        type: string
                      QualityMeasurements:
                        type: object
                        properties:
                          Id:
                            type: integer
                          Name:
                            type: string
                          Description:
                            type: string
                          Structure:
                            type: string
                          Value:
                            type: number
                          RelationalOperatorId:
                            type: integer
                          Enable:
                            type: boolean
                            description: |
                              trueの場合このMeasurementを使用する。  
                              falseの場合は使用しない。  
                              trueの場合はValue、RelationalOperatorIdが共に設定されていることが前提。
                      TargetInventories:
                        type: array
                        items:
                          type: object
                          properties:
                            Id:
                              type: integer
                            TemplateInventoryId:
                              type: integer
                              description: |
                                テンプレートになるターゲットインベントリIDを返却する。  
                            Name:
                              type: string
                            Type:
                              type: string
                            Description:
                              type: string
                      TestRunner:
                        type: object
                        properties:
                          Id:
                            type: integer
                          Name:
                            type: string
                          Description:
                            type: string
                          Version:
                            type: string
                          Author:
                            type: string
                          Email:
                            type: string
                          Quality:
                            type: string
                          LandingPage:
                            type: string
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                Id:
                                  type: integer
                                Name:
                                  type: string
                                Value:
                                  type: string
                                Description:
                                  type: string
                      TestDescriptionResult:
                        type: object
                        properties:
                          Summary:
                            type: string
                          Datail:
                            type: string
                          LogFile:
                            type: string
                          Graphs:
                            type: array
                            items:
                              type: object
                              properties:
                                Id:
                                  type: integer
                                Name:
                                  type: string
                                FileName:
                                  type: string
                                Description:
                                  type: string
                                GraphType:
                                  type: string
                                ReportRequired:
                                  type: boolean
                                ReportIndex:
                                  type: string
                                ReportName:
                                  type: string
                                Graph:
                                  type: string
                          Downloads:
                            type: array
                            items:
                              type: object
                              properties:
                                Id:
                                  type: integer
                                Name:
                                  type: string
                                FileName:
                                  type: string
                                Description:
                                  type: string
                                DownloadURL:
                                  type: string
                          CreationDatetime:
                            description: 該当のテストデスクリプションが作成されたシステム日時を返却します
                            type: string
                          UpdateDatetime:
                            type: string
                          Star:
                            type: boolean
                            description: |
                              このTestDescriptionがお気に入りに指定されているかどうかを真偽値で返却する。  
                example:
                  Result:
                    Code: 'T32000'
                    Message: Success.
                  TestDescriptionDetail:
                    Id: 1
                    Name: NeuronCoverage
                    ParentID: 3
                    QualityDimension:
                      id: 5
                      Name: 学習の安定性
                    Opinion: 見解
                    QualityMeasurements:
                      id: 1
                      Name: 学習モデルの敵対的サンプル安定性計測
                      Value: "80"
                      Description: 学習モデルの安定性評価指標
                      Structure: single
                      RelationalOperatorId: 1
                      Enable: true
                    TargetInventories:
                      - Id: 4
                        Name: TestDataset_1018
                        TemplateInventoryId: 1
                        Type: "dataset"
                        Description: "1枚の手書き文字データ(28x28, png)のpng"
                      - Id: 5
                        Name: TrainedModel_1007
                        TemplateInventoryId: 2
                        Type: "model"
                        Description: "学習モデル"
                    TestRunner:
                      id: 1
                      Name: neuron_coverage_v3.py
                      Description: "* データ入力形式: XXX\n* MLエンジン: tensorflow-vX.X\n* 出力: XXX\n"
                      Author: "John Smith"
                      Email: "John Smith@aaa.com"
                      Version: "1"
                      Quality: "https://airc.aist.go.jp/aiqm/quality/internal/要求分析の十分性"
                      LandingPage: "https://aithub.com/AITName/AITVersion"
                      Params:
                        - Id: 1
                          Name: Threshold
                          Description: "Threshold"
                          Value: "0.5"
                        - Id: 2
                          Name: Lower Limit
                          Description: "Lower Limit"
                          Value: "0.3"
                        - Id: 3
                          Name: Upper Limit
                          Description: "Upper Limit"
                          Value: "1,0"
                    TestDescriptionResult:
                      Summary: OK
                      Detail: Current Coverage 85%
                      LogFile: 'http://XXX'
                      Graphs:
                        - Id: 1
                          GraphType: "picture"
                          Name: "distribution_graph"
                          FileName: "distribution_graph_a.png"
                          Description: "分布"
                          ReportRequired: False
                          ReportIndex: 1
                          ReportName: "distribution_graph"
                          Graph: 'http://XXX'
                        - Id: 2
                          GraphType: "picture"
                          Name: "distribution_graph"
                          FileName: "distribution_graph_b.png"
                          Description: "分布"
                          ReportRequired: False
                          ReportIndex: 2
                          ReportName: "distribution_graph"
                          Graph: 'http://XXX'
                        - Id: 3
                          GraphType: "picture"
                          Name: "distribution_graph"
                          FileName: "distribution_graph_c.png"
                          Description: "分布"
                          ReportRequired: False
                          ReportIndex: 3
                          ReportName: "distribution_graph"
                          Graph: 'http://XXX'
                      Downloads:
                        - Id: 1
                          Name: "log"
                          FileName: "log.txt"
                          Description: "one image"
                          DownloadURL: 'http://XXX'
                      CreationDatetime: "2020-09-28T01:22:03.920542"
                      UpdateDatetime: "2020-09-28T01:22:03.920542"
                      Star: true
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T34000'
                  Message: not found page.
        '422':
          description: |
            不正リクエスト
            - BadRequest
            - SQLAlChemyError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T30000 or T39000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    delete:
      tags:
        - Test descriotions
      summary: テストディスクリプション詳細削除.
      description: |
        選択した機械学習コンポーネントとログインユーザの組織に紐付く対象のテストディスクリプションIDを指定し、そのテストディスクリプションの詳細情報を削除する
        指定したテストディスクリプションに子供がいる場合、子供も再帰的に削除する
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
        - name: testTestDescriptionsId
          in: path
          description: テストディスクリプションId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description:  削除成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T52000'
                  Message: success.
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T54000'
                  Message: not found page.
        '422':
          description: |
            不正リクエスト
            - BadRequest
            - SQLAlChemyError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T50000 or T59000'
                  Message: database error.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - Test descriotions
      summary: テストディスクリプション詳細編集.
      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付く対象のテストディスクリプションIDを指定し、そのテストディスクリプションの詳細情報を編集する。ただし、更新対象がテスト実行済み、かつ結果が成功の場合は編集不可とする。
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
        - name: testTestDescriptionsId
          in: path
          description: テストディスクリプションId
          required: true
          schema:
            type: integer
      requestBody:
        description: テストディスクリプション詳細追加情報
        content:
          application/json:
            schema:
              required:
                - Name
                - QualityDimensionID
                - QualityMeasurements
                - TargetInventories
                - TestRunner
              properties:
                Name:
                  type: string
                QualityDimensionID:
                  type: integer
                  description: |
                    内部品質プロパティIDを指定する。  
                    存在しない内部品質プロパティIDを指定した場合、422を返却する。
                QualityMeasurements:
                  type: object
                  properties:
                    Id:
                      type: integer
                    Value:
                      type: string
                    RelationalOperatorId:
                      type: integer
                    Enable:
                      type: boolean
                      description: |
                        trueの場合このMeasurementを使用する。  
                        falseの場合は使用しない。  
                        trueの場合はValue、RelationalOperatorIdが共に設定されていることが前提。  
                        上記が未設定の場合、400を返却する。
                TargetInventories:
                  type: array
                  items:
                    properties:
                      Id:
                        type: integer
                      InventoryId:
                        type: integer
                      TemplateInventoryId:
                        type: integer
                        description: |
                          テンプレートになるターゲットインベントリIDを設定する。  
                TestRunner:
                  type: object
                  properties:
                    Id:
                      type: integer
                    Params:
                      type: object
                      properties:
                        TestRunnerParamTemplateId:
                          type: integer
                        Value:
                          type: string
            example:
              Name: Neuron Coverage
              QualityDimensionID: 1
              QualityMeasurements:
                Id: 1
                Value: "60"
                RelationalOperatorId: 1
                Enable: true
              TargetInventories:
                - Id: 1
                  InventoryId: 5
                  TemplateInventoryId: 1
                - Id: 2
                  InventoryId: 4
                  TemplateInventoryId: 1
              TestRunner:
                Id: 1
                Params:
                  - TestRunnerParamTemplateId: 1
                    Value: "0.5"
                  - TestRunnerParamTemplateId: 2
                    Value: "0.3"
                  - TestRunnerParamTemplateId: 3
                    Value: "1.0"
      responses:
        '200':
          description: テストディスクリプションの詳細情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - Job
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                example:
                  Result:
                    Code: 'T42000'
                    Message: Success.
        '400':
          description: |
            以下の無効なリクエストを受信したときに返却する。
              - ValidationError
              - TypeError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T48000'
                  Message: invalid request.
        '404':
          description:  更新対象のテスト実行済み、かつ結果が成功の場合のエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T44000'
                  Message: Cannot be edited if the test has been executed and the result is successful.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions/{testTestDescriptionsId}/star':
    post:
      tags:
        - Test descriotions
      summary: お気に入り設定
      description: 指定したテストディスクリプションをお気に入りに設定する
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
        - name: testTestDescriptionsId
          in: path
          description: テストディスクリプションId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 設定
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T62000'
                  Message: Success.
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T64000'
                  Message: not found page.
        '422':
          description: |
            不正リクエスト
            - 削除済みテストディスクリプションを変更しようとした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'I65000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions/{testTestDescriptionsId}/unstar':
    post:
      tags:
        - Test descriotions
      summary: お気に入り設定解除
      description: 指定したテストディスクリプションをお気に入りから外す
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
        - name: testTestDescriptionsId
          in: path
          description: テストディスクリプションId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 設定
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T72000'
                  Message: Success.
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T74000'
                  Message: not found page.
        '422':
          description: |
            不正リクエスト
            - 削除済みテストディスクリプションを変更しようとした
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T75000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions/{testTestDescriptionsId}/ancestors':
    get:
      tags:
        - Test descriotions
      summary: 祖先テストディスクリプション一覧表示.
      description: |
        該当するテストディスクリプションの祖先リストを昇順（親→子）の順序で返却する。
        返却するリストの最後尾には該当テストディスクリプションが付加される。
        そのため、親のいないテストディスクリプションを指定した場合、
        該当テストディスクリプション1つだけが返却される。
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
        - name: testTestDescriptionsId
          in: path
          description: テストディスクリプションId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: テストディスクリプション情報
          content:
            application/json:
              schema:
                required:
                  - Result
                  - TestDescriptions
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  TestDescriptions:
                    type: array
                    items:
                      type: object
                      properties:
                        Id:
                          type: integer
                        ParentID:
                          type: integer
                          description: |
                            親TestDescriptionIDを返却する。  
                            親がいない場合、この項目は存在しない。  
                        Name:
                          type: string
                        Result:
                          type: string
                        ResultDetail:
                          type: string
                        CreationDatetime:
                          description: 該当のテストデスクリプションが作成されたシステム日時を返却します
                          type: string
                        UpdateDatetime:
                          type: string
                        TargetInventories:
                          type: array
                          description: |
                            このTestDescriptionが対象とするインベントリ情報リストを返却する。  
                          items:
                            type: object
                            properties:
                              Id:
                                type: integer
                              Name:
                                type: string
                              TemplateInventoryId:
                                type: integer
                                description: |
                                  テンプレートになるターゲットインベントリIDを返却する。  
                        Opinion:
                          type: string
                          description: |
                            このTestDescriptionの見解を返却する。未設定の場合、空文字で返却する。  
                        Star:
                          type: boolean
                          description: |
                            このTestDescriptionがお気に入りに指定されているかどうかを真偽値で返却する。  
                        TestRunnerId:
                          type: integer
                          description: |
                            TestDescriptionの元になったテストランナー（AIT）のIDを返却する。
                example:
                  Result:
                    Code: 'T82000'
                    Message: Success.
                  TestDescriptions:
                    - Id: 1
                      Name: NeuronCoverage
                      Result: OK
                      CreationDatetime: "2020-09-28T01:22:03.920542"
                      UpdateDatetime: "2020-09-28T01:22:03.920542"
                      TargetInventories: [
                        {
                          "Id": 1,
                          "Name": "TestDataset_1001",
                          "TemplateInventoryId": 1
                        }
                      ]
                      Opinion: "ニューロンカバレージが規定のXX%以上であり、品質に問題なしと判断した。"
                      Star: true
                      TestRunnerId: 10
                    - Id: 2
                      ParentID: 1
                      Name: MetamorphicTesting
                      Result: OK
                      ResultDetail: OK
                      CreationDatetime: "2020-09-28T01:22:03.920542"
                      UpdateDatetime: "2020-09-28T01:22:03.920542"
                      TargetInventories: [
                        {
                          "Id": 2,
                          "Name": "TestDataset_1005",
                          "TemplateInventoryId": 2
                        },
                        {
                          "Id": 3,
                          "Name": "TrainedModel_1005",
                          "TemplateInventoryId": 3
                        }
                      ]
                      Opinion: ""
                      Star: false
                      TestRunnerId: 10
                    - Id: 3
                      ParentID: 2
                      Name: AttributeCoverage
                      Result: NG
                      ResultDetail: AttributeCoverage is not enough
                      CreationDatetime: "2020-09-28T01:22:03.920542"
                      UpdateDatetime: "2020-09-28T01:22:03.920542"
                      TargetInventories: [
                        {
                          "Id": 2,
                          "Name": "TestDataset_1005",
                          "TemplateInventoryId": 4
                        }
                      ]
                      Opinion: ""
                      Star: false
                      TestRunnerId: 10
                    - Id: 4
                      ParentID: 3
                      Name: AttributeCoverage
                      Result: NA
                      ResultDetail: NA
                      CreationDatetime: "2020-09-28T01:22:03.920542"
                      UpdateDatetime: "2020-09-28T01:22:03.920542"
                      TargetInventories: [
                        {
                          "Id": 4,
                          "Name": "TestDataset_1018",
                          "TemplateInventoryId": 5
                        },
                        {
                          "Id": 5,
                          "Name": "TrainedModel_1007",
                          "TemplateInventoryId": 6
                        }
                      ]
                      Opinion: ""
                      Star: false
                      TestRunnerId: 10
        '404':
          description:  アクセスエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T84000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'T85000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions/reportGenerator':
    post:
      tags:
        - Test descriotions
      summary: レポート生成器に対してコマンドを発行する.
      description: |
        発行コマンドは以下の通り。
          - パラメータ設定
          - レポート生成
      parameters:
        - name: OrganizerId
          in: path
          description: 組織ID
          required: true
          schema:
            type: string
        - name: mlComponentsId
          in: path
          description: 機械学習コンポーネントId
          required: true
          schema:
            type: integer
      requestBody:
        description: コマンド
        content:
          application/json:
            schema:
              required:
                - Command
                - Destination
              properties:
                Command:
                  type: string
                  description: |
                    - `SetParam` : パラメータ設定  
                    - `Generate` : レポート生成  
                Destination:
                  type: array
                  description: |
                    - コマンドの反映先となるtestDescriptionIDを指定する。  
                    - 複数のtestDescriptionIDを指定可能とする。  
                    - すべてのtestDescriptionに対して実施したい場合は、空を指定する。  
                  items:
                    type: string
                Params:
                  type: object
                  properties:
                    Opinion:
                      type: string
                      description: |
                        - 変更する必要がない場合、省略する
                    Graphs:
                      type: array
                      description: |
                        - リストから省略したgraphは出力を無しに設定する
                      items:
                        type: object
                        properties:
                          GraphId:
                            type: integer
                            description: |
                              - `GET /testDescriptions/{testTestDescriptionsId}` で返却されたGraphs/Idを指定する  
                          ReportRequired:
                            type: boolean
                            description: |
                              - レポートの出力有無を指定する  
                          ReportIndex:
                            type: integer
                            description: |
                              - レポートの出力順序(昇順)を指定する  
                              - 同じ順序を指定した場合、エラーにはせず、ソートアルゴリズムで結果が変わることに留意すること  
                              - ReportRequiredが`false`の場合、省略する（指定されても無視する）
                          ReportName:
                            type: string
                            description: |
                              - レポートの出力名称を指定する  
                              - ReportRequiredが`false`の場合、省略する（指定されても無視する）
                  description: |
                    - `SetParam` : グラフごとのレポート表示設定  
                    - `Generate` : レポート生成  
                      - 指定不要（指定しても無視する）
                  items:
                    type: object
                    additionalProperties:
                      type: string
            examples:
              SetParam: # example1
                value:
                  Command: SetParam
                  Destination: ["1"]
                  Params: 
                    Opinion: "XXX"
                    Graphs: [
                      {
                        "GraphId": 1,
                        "ReportRequired": True,
                        "ReportIndex": 1,
                        "ReportName": "Graph-A"
                      },
                      {
                        "GraphId": 2,
                        "ReportRequired": True,
                        "ReportIndex": 2,
                        "ReportName": "Graph-B"
                      },
                      {
                        "GraphId": 2,
                        "ReportRequired": False,
                      }
                    ]
              GenerateAll: # example2
                value:
                  Command: Generate
                  Destination: []
              GeneratePart: # example3
                value:
                  Command: Generate
                  Destination: ["1","3"]
      responses:
        '200':
          description: コマンドの実行結果を返却する
          content:
            application/json:
              schema:
                required:
                  - Result
                properties:
                  Result:
                    type: object
                    properties:
                      Code:
                        type: integer
                      Massage:
                        type: string
                  OutParams:
                    type: array
                    description: |
                      - `Generate` コマンド時に返却する。
                        - "ReportUrl": "レポートのダウンロードURL"
                    items:
                      type: object
                      additionalProperties:
                        type: string
              examples:
                Generate:
                  value:
                    Result:
                      Code: 'D12000'
                      Message: Success.
                    OutParams: [
                      ReportUrl: "http://xxx"
                    ]
        '400':
          description: |
            以下の無効なリクエストを受信したときに返却する。
              - 未定義のCommandが指定された。
              - 存在しないグラフ種別をParamsのGraphTypeで指定された。
              - ValidationError
              - TypeError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'D18000'
                  Message: invalid request.
        '404':
          description: |
            - 指定したOrganizerIDとmlComponentsIDの組み合わせが存在しない。またはアクセス権限がない。
            - Destinationに指定したTestDescriptionが存在しない。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'D14000'
                  Message: not found page.
        '422':
          description:  不正リクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'D10000'
                  Message: bad request.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  '/download/{DownloadId}':
    get:
      tags:
        - Download
      summary: 指定されたIDに紐づくファイルをダウンロードする.
      description: |
        指定したIDに紐づくファイルをダウンロードする
      parameters:
        - name: DownloadId
          in: path
          description: ダウンロードID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ダウンロードファイルを返却する
        '404':
          description: |
            - 指定したIDが存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                Result:
                  Code: 'D16000'
                  Message: not found page.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
components:
  schemas:
    Result:
      type: object
      required:
        - Code
        - Massage
      properties:
        Result:
          type: object
          properties:
            Code:
              type: integer
            Massage:
              type: string
          example:
            Code: 'XX9999(XX:機能分類コード)'
            Message: unexpected error.
